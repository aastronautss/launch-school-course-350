#! /usr/bin/env ruby

require 'socket'
require_relative './command'
require_relative './message_response'

class IRCBot
  attr_accessor :host, :port, :nick

  def initialize(host, port, nick, channel)
    @host = host
    @port = port
    @nick = nick
    @channel = channel
  end

  def connect
    open_socket
    join_channel
    start_listening
  end

  def disconnect
    send_command "PART #{@channel}"
    send_command "QUIT"
    @socket.close
  end

  private

  def open_socket
    @socket = TCPSocket.open @host, @port
  end

  def join_channel
    send_command "USER #{@nick} localhost localhost :#{@nick}"
    send_command "NICK #{@nick}"
    send_command "JOIN #{@channel}"
  end

  def send_command(command)
    puts "> #{command}"
    @socket.puts command
  end

  def start_listening
    while line = @socket.gets
      puts "< #{line}"
      process_command line
    end
  end

  def process_command(line)
    command = Command.parse line
    case command.name
    when 'PING'
      send_command "PONG :#{command.arguments.last}"
    when 'PRIVMSG'
      respond_to_message command
    end
  end

  def respond_to_message(command)
    to = command.arguments.first
    if to == @nick
      to = command.nick
    end

    message = command.arguments.last.strip

    if message.start_with? '!'
      response = MessageResponse.respond_to message
      send_command "PRIVMSG #{to} :#{response}"
    elsif to == command.nick
      send_command "PRIVMSG #{to} :#{message}"
    end
  end
end

def validate_channel(channel)
  !!channel.match(/\A\#.+/)
end

nick, channel = ARGV
fail 'must pass nick and channel' unless nick && channel
fail "channel must begin with '#'" unless validate_channel(channel)

@bot = IRCBot.new 'chat.freenode.net', 6667, nick, channel
at_exit do
  @bot.disconnect
end
@bot.connect
